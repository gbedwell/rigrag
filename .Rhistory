scale_y_continuous(limits=c(0,1),
breaks=c(0,0.25,0.5,0.75)) +
labs(x="Distance from Nearest LAD (Mbp)", y="Fraction of Total Integration")
#lads.plot.2
model.combo.plots <- cowplot::plot_grid(model.plots)
overlap.plots.row1 <- cowplot::plot_grid(outliers.parts.plot, wt.overlap.plot, cso.plots,
rel_widths = c(1.1,1,1),
ncol=3, label_size=18,
labels=c("K","L","M"))
overlap.plots.row2 <- cowplot::plot_grid(wt.rag.overlap.plot, spads.plot.2, lads.plot.2,
rel_widths = c(1,1.1,1.1),
ncol=3, label_size=18,
labels=c("N","O","P"))
combined.plots <- cowplot::plot_grid(model.combo.plots,
overlap.plots.row1,
overlap.plots.row2,
nrow=3, rel_heights=c(1,0.65,0.65))
ggsave(filename=paste0(getwd(), "/", figure.directory, "/", "ko_kd_combo_plots.tiff"), plot=combined.plots, height=16,
width=20, units="in", device="tiff")
hek.model.plots <- rigrag::model_plot(df=hek.samples, output.type="combo", num.col=4, labels="AUTO", label.size=18, write.out = "no")
hek.genic.parts <- hek.samples %>%
dplyr::mutate(genic.frac = genic.sites/total.sites) %>%
dplyr::group_by(sample, outlier.type) %>%
dplyr::mutate(int.sum = sum(int.counts)) %>%
dplyr::mutate(pop.frac = (int.sum/genic.sites)*genic.frac) %>%
dplyr::select(sample, genic.frac, outlier.type, pop.frac, int.sum) %>%
dplyr::distinct(sample, outlier.type, .keep_all=TRUE) %>%
dplyr::ungroup() %>%
dplyr::group_by(sample) %>%
dplyr::mutate(total.num = sum(int.sum)) %>%
dplyr::ungroup()
hek.upper.counts <- hek.genic.parts %>%
dplyr::select(sample, outlier.type, int.sum, total.num) %>%
dplyr::filter(outlier.type=="UPPER") %>%
dplyr::mutate(non.upper = total.num-int.sum)
hek.genic.parts$sample <- factor(hek.genic.parts$sample,
levels = c("WT HEK293T", "LKO HEK293T", "CKO HEK293T", "DKO HEK293T"))
hek.genic.parts$outlier.type <- factor(hek.genic.parts$outlier.type,
levels =c("UPPER","LOWER","NONE"))
hek.outliers.parts.plot <- ggplot(hek.genic.parts, aes(x=sample, y=pop.frac, fill=outlier.type)) +
geom_bar(stat="identity", color = "black", width = 0.75) +
scale_fill_brewer("Genic Subpopulations",
palette = "Blues",
guide = guide_legend(reverse = FALSE,
title.position = "top",
nrow = 1,
title.hjust=0.5),
labels = c("RIGs", "RAGs", "Non-outliers")) +
theme_bw() + theme(panel.grid.major.x=element_blank(),
text=element_text(size=12),
legend.position="top",
legend.key.size = unit(0.5, "cm"),
legend.key.width = unit(0.5,"cm"),
legend.text = element_text(size=12),
legend.title=element_text(size=12),
legend.box.margin=margin(-10,-10,-10,-10),
axis.text.x=element_text(size=14),
axis.text.y=element_text(size=14),
axis.title=element_text(size=16)) +
scale_x_discrete(labels = c("WT\n293T", "LKO\n293T", "CKO\n293T", "DKO\n293T")) +
scale_y_continuous(limits = c(0,1)) +
labs(x = "Sample", y = "Fraction of Integration into Genes")
#hek.outliers.parts.plot
fisher <- function(a,b,c,d){
data <- matrix(c(a,b,c,d),ncol=2)
c(p = fisher.test(data, alternative="two.sided")$p.value,
OR = fisher.test(data, alternative="two.sided")$estimate) }
#CKO-DKO Fisher
fisher(unlist(hek.upper.counts[3,3]), unlist(hek.upper.counts[3,5]),
unlist(hek.upper.counts[4,3]), unlist(hek.upper.counts[4,5]))
#CKO-WT Fisher
fisher(unlist(hek.upper.counts[1,3]), unlist(hek.upper.counts[1,5]),
unlist(hek.upper.counts[3,3]), unlist(hek.upper.counts[3,5]))
#LKO-DKO Fisher
#CKO-WT Fisher
fisher(unlist(hek.upper.counts[2,3]), unlist(hek.upper.counts[2,5]),
unlist(hek.upper.counts[4,3]), unlist(hek.upper.counts[4,5]))
wt.hek.rigs <- hek.samples %>%
dplyr::filter(sample=="WT HEK293T",  outlier.type=="UPPER") %>%
dplyr::select(gene.name) %>%
dplyr::distinct()
lko.hek.rigs <- hek.samples %>%
dplyr::filter(sample=="LKO HEK293T",  outlier.type=="UPPER") %>%
dplyr::select(gene.name) %>%
dplyr::distinct()
cko.hek.rigs <- hek.samples %>%
dplyr::filter(sample=="CKO HEK293T", outlier.type=="UPPER") %>%
dplyr::select(gene.name) %>%
dplyr::distinct()
dko.hek.rigs <- hek.samples %>%
dplyr::filter(sample=="DKO HEK293T", outlier.type=="UPPER") %>%
dplyr::select(gene.name) %>%
dplyr::distinct()
wt.dko.overlap <- data.frame(sample=c("CKO","LKO","DKO","CKO","LKO","DKO"),
frac=c(nrow(dplyr::inner_join(cko.hek.rigs, wt.hek.rigs, by="gene.name"))/nrow(cko.hek.rigs),
nrow(dplyr::inner_join(lko.hek.rigs, wt.hek.rigs, by="gene.name"))/nrow(lko.hek.rigs),
nrow(dplyr::inner_join(dko.hek.rigs, wt.hek.rigs, by="gene.name"))/nrow(dko.hek.rigs),
1-nrow(dplyr::inner_join(cko.hek.rigs, wt.hek.rigs, by="gene.name"))/nrow(cko.hek.rigs),
1-nrow(dplyr::inner_join(lko.hek.rigs, wt.hek.rigs, by="gene.name"))/nrow(lko.hek.rigs),
1-nrow(dplyr::inner_join(dko.hek.rigs, wt.hek.rigs, by="gene.name"))/nrow(dko.hek.rigs)),
overlap=c("matched","matched","matched","unmatched","unmatched","unmatched"))
wt.dko.overlap$sample <- factor(wt.dko.overlap$sample,
levels = c("LKO","CKO","DKO"))
wt.dko.overlap.plot <- ggplot(wt.dko.overlap, aes(x=sample, y=frac, fill=overlap)) +
geom_bar(stat="identity", color = "black", width = 0.6) +
scale_fill_manual("",
labels = c("Matched Genes", "Unmatched Genes"),
values = c("#08519C", "#C6DBEF"),
guide = guide_legend(reverse = FALSE,
title.position = "top",
nrow = 1,
title.hjust=0.5)) +
theme_bw() + theme(panel.grid.major.x=element_blank(),
panel.grid.minor.x=element_blank(),
text=element_text(size=12),
legend.position="top",
legend.key.size = unit(0.5, "cm"),
legend.key.width = unit(0.5,"cm"),
legend.text = element_text(size=14),
legend.title=element_text(size=14),
legend.box.margin=margin(-10,-10,-10,-10),
axis.text=element_text(size=14),
axis.title=element_text(size=16)) +
scale_x_discrete(labels = c("LKO", "CKO", "DKO")) +
scale_y_continuous(breaks=c(0,0.25,0.5,0.75,1)) +
labs(x = "HEK293T Cell Type", y = "Overlap with WT RIGs")
#wt.dko.overlap.plot
cko.overlap <- data.frame(sample=c("WT","LKO","DKO","WT","LKO","DKO"),
frac=c(nrow(dplyr::inner_join(wt.hek.rigs, cko.hek.rigs, by="gene.name"))/nrow(wt.hek.rigs),
nrow(dplyr::inner_join(lko.hek.rigs, cko.hek.rigs, by="gene.name"))/nrow(lko.hek.rigs),
nrow(dplyr::inner_join(dko.hek.rigs, cko.hek.rigs, by="gene.name"))/nrow(dko.hek.rigs),
1-nrow(dplyr::inner_join(wt.hek.rigs, cko.hek.rigs, by="gene.name"))/nrow(wt.hek.rigs),
1-nrow(dplyr::inner_join(lko.hek.rigs, cko.hek.rigs, by="gene.name"))/nrow(lko.hek.rigs),
1-nrow(dplyr::inner_join(dko.hek.rigs, cko.hek.rigs, by="gene.name"))/nrow(dko.hek.rigs)),
overlap=c("matched","matched","matched","unmatched","unmatched","unmatched"))
cko.overlap$sample <- factor(cko.overlap$sample,
levels = c("WT","LKO","DKO"))
cko.overlap.plot <- ggplot(cko.overlap, aes(x=sample, y=frac, fill=overlap)) +
geom_bar(stat="identity", color = "black", width = 0.6) +
scale_fill_manual("",
labels = c("Matched Genes", "Unmatched Genes"),
values = c("#08519C", "#C6DBEF"),
guide = guide_legend(reverse = FALSE,
title.position = "top",
nrow = 1,
title.hjust=0.5)) +
theme_bw() + theme(panel.grid.major.x=element_blank(),
panel.grid.minor.x=element_blank(),
text=element_text(size=12),
legend.position="top",
legend.key.size = unit(0.5, "cm"),
legend.key.width = unit(0.5,"cm"),
legend.text = element_text(size=14),
legend.title=element_text(size=14),
legend.box.margin=margin(-10,-10,-10,-10),
axis.text=element_text(size=14),
axis.title=element_text(size=16)) +
scale_x_discrete(labels = c("WT", "LKO", "DKO")) +
scale_y_continuous(breaks=c(0,0.25,0.5,0.75,1)) +
labs(x = "HEK293T Cell Type", y = "Overlap with CKO RIGs")
#cko.overlap.plot
nrow(dplyr::inner_join(dko.hek.rigs, cko.hek.rigs, by="gene.name"))
nrow(dplyr::inner_join(dko.hek.rigs, cko.hek.rigs, by="gene.name"))/nrow(dko.hek.rigs)
nrow(dplyr::inner_join(dko.hek.rigs, wt.hek.rigs, by="gene.name"))
nrow(dplyr::inner_join(dko.hek.rigs, wt.hek.rigs, by="gene.name"))/nrow(dko.hek.rigs)
spads.plot.2 <- ggplot(spads.plot.df, aes(x=x, y=freq, fill=sample)) +
geom_area(size=0.5, alpha=1, color="black") +
geom_text(data = spads.stat.labels, aes(x = 0, y = 0.92, label = sig.label), size=5, hjust = 0.5) +
geom_text(data = spads.stat.labels, aes(x = 56, y = 0.93, label = frac), size=4, hjust = 0) +
facet_grid(rows = vars(sample), scales="free_x") +
scale_fill_brewer(palette = "Blues") +
guides(colour = guide_legend(override.aes = list(size=2))) +
theme_bw() + theme(axis.text=element_text(size=14),
axis.title=element_text(size=16),
legend.position = "none", strip.text.y = element_text(size = 12)) +
scale_x_continuous(limits=c(-60,60),
breaks=c(-60,-30,0,30,60)) +
scale_y_continuous(limits=c(0,1),
breaks=c(0,0.25,0.5,0.75)) +
labs(x="Distance from Nearest SPAD (Mbp)", y="Fraction of Total Integration")
lads.plot.2 <- ggplot(lads.plot.df, aes(x=x, y=freq, fill=sample)) +
geom_area(size=0.5, alpha=1, color="black") +
geom_text(data = lads.stat.labels, aes(x = 0, y = 0.92, label = sig.label), size=5, hjust = 0.5) +
geom_text(data = lads.stat.labels, aes(x = 7.5, y = 0.93, label = frac), size=4, hjust = 0) +
facet_grid(rows = vars(sample), scales="free_x") +
scale_fill_brewer(palette = "Blues") +
guides(colour = guide_legend(override.aes = list(size=2))) +
theme_bw() + theme(axis.text=element_text(size=14),
axis.title=element_text(size=16),
legend.position = "none", strip.text.y = element_text(size = 12)) +
scale_x_continuous(limits=c(-8,8),
breaks=c(-8,-4,0,4,8)) +
scale_y_continuous(limits=c(0,1),
breaks=c(0,0.25,0.5,0.75)) +
labs(x="Distance from Nearest LAD (Mbp)", y="Fraction of Total Integration")
model.combo.plots <- cowplot::plot_grid(model.plots)
overlap.plots.row1 <- cowplot::plot_grid(outliers.parts.plot, wt.overlap.plot, cso.plots,
rel_widths = c(1.1,1,1),
ncol=3, label_size=18,
labels=c("K","L","M"))
overlap.plots.row2 <- cowplot::plot_grid(wt.rag.overlap.plot, spads.plot.2, lads.plot.2,
rel_widths = c(1,1.1,1.1),
ncol=3, label_size=18,
labels=c("N","O","P"))
combined.plots <- cowplot::plot_grid(model.combo.plots,
overlap.plots.row1,
overlap.plots.row2,
nrow=3, rel_heights=c(1,0.65,0.65))
ggsave(filename=paste0(getwd(), "/", figure.directory, "/", "ko_kd_combo_plots.tiff"), plot=combined.plots, height=16,
width=20, units="in", device="tiff")
citation("tidyverse")
citation("tidyr")
citation("dplyr")
citation("purr")
citation("purrr")
citation("forcats")
citation("data.table")
citation("ggsignif")
citation("scales")
citation("ggrepel")
citation("broom")
citation("minpack.lm")
citation("cowplot")
citation("Homo.sapien")
citation("Homo.sapiens")
library(reticulate)
require(tidyverse)
allmypackages <- as.data.frame(installed.packages())
allmypackages <- allmypackages %>%
filter(Priority != "base" | is.na(Priority)) %>%
select(-c(Enhances:MD5sum, LinkingTo:Suggests)) %>%
droplevels()
str(allmypackages)
package_source <- function(pkg){
x <- as.character(packageDescription(pkg)$Repository)
if (length(x)==0) {
y <- as.character(packageDescription(pkg)$GithubRepo)
z <- as.character(packageDescription(pkg)$GithubUsername)
if (length(y)==0) {
return("Other")
} else {
return(str_c("GitHub repo = ", z, "/", y))
}
} else {
return(x)
}
}
# show the first 60 as an example
head(sapply(allmypackages$Package, package_source), 60)
allmypackages$whereat <- sapply(allmypackages$Package, package_source)
str(allmypackages)
table(allmypackages$whereat)
allmypackages %>%
filter(whereat == "Other") %>%
select(Package, Version)
write.csv(allmypackages, "mypackagelistNov2020.csv")
install.packages("tidyverse")
library(tidyverse)
install.packages("stringi")
library(tidyverse)
oldpackages <- read.csv("mypackagelistMay2019.csv")
allmypackages <- as.data.frame(installed.packages())
allmypackages <- allmypackages %>%
filter(Priority != "base" | is.na(Priority)) %>%
select(-c(Enhances:MD5sum, LinkingTo:Suggests))
thediff <- anti_join(oldpackages,allmypackages, by = "Package")
getwd()
oldpackages <- read.csv("mypackagelistNov2020.csv")
allmypackages <- as.data.frame(installed.packages())
allmypackages <- allmypackages %>%
filter(Priority != "base" | is.na(Priority)) %>%
select(-c(Enhances:MD5sum, LinkingTo:Suggests))
thediff <- anti_join(oldpackages,allmypackages, by = "Package")
thediff <- droplevels(thediff)
thediff %>%
filter(whereat == "CRAN") %>%
pull(Package) %>%
as.character
thediff %>%
filter(whereat == "CRAN") %>%
pull(Package) %>%
as.character %>%
install.packages
thediff %>%
filter(str_detect(whereat, "GitHub repo")) %>%
select(Package, Version, NeedsCompilation, whereat)
devtools::install_github("thomasp85/patchwork").
devtools::install_github("thomasp85/patchwork")
devtools::install_github("brentthorne/posterdown"); devtools::install_github("rstudio/reticulate"); devtools::install_github("omegahat/Sxslt"); devtools::install_github("mariodosreis/tai")
devtools::install_github("brentthorne/posterdown"); devtools::install_github("rstudio/reticulate"); devtools::install_github("omegahat/Sxslt"); devtools::install_github("mariodosreis/tai")
devtools::install_github("omegahat/Sxslt"); devtools::install_github("mariodosreis/tai")
devtools::install_github("brentthorne/posterdown"); devtools::install_github("rstudio/reticulate"); devtools::install_github("omegahat/Sxslt"); devtools::install_github("mariodosreis/tai")
allmypackages %>%
filter(str_detect(whereat, "R-Forge")) %>%
select(Package, Version, NeedsCompilation, whereat)
install.packages("CHAID", repos="http://R-Forge.R-project.org")
thediff %>%
filter(str_detect(whereat, "Other")) %>%
select(Package, Version, NeedsCompilation, whereat)
thediff %>%
filter(str_detect(whereat, "Other"))
thediff %>%
filter(str_detect(whereat, "Other")) %>%
select(Package, Version, NeedsCompilation, whereat)
if (!requireNamespace("BiocManager", quietly = TRUE))
install.packages("BiocManager")
BiocManager::install("annotatr")
if (!requireNamespace("BiocManager", quietly = TRUE))
install.packages("BiocManager")
BiocManager::install("BSgenome.Hsapiens.UCSC.hg19")
if (!requireNamespace("BiocManager", quietly = TRUE))
install.packages("BiocManager")
BiocManager::install("TxDb.Hsapiens.UCSC.hg19.knownGene")
setwd("/Documents/github")
setwd("/Users/gbedwell/Documents/github")
setwd("/Users/gbedwell/Documents/github/rigrag")
devtools::install()
library(rigrag)
library(devtools)
library(roxygen2)
devtools::document()
devtools::install()
library(devtools); library(roxygen2)
devtools::document()
devtools::install()
library(devtools)
library(roxygen2)
devtools::document()
devtools::install()
library(devtools)
library(roxygen2)
devtools::document()
devtools::install()
install.packages("xaringan")
source('~/Documents/github/rigrag/R/outliers_output.R', echo=TRUE)
source('~/Documents/github/rigrag/R/outliers_output.R', echo=TRUE)
setwd("~/")
getwd()
library(devtools)
library(roxygen2)
devtools::document()
devtools::install()
devtools::document()
devtools::install()
devtools::document()
devtools::install()
library(devtools)
library(roxygen2)
devtools::document()
devtools::install()
devtools::document()
devtools::install()
devtools::document()
devtools::install()
devtools::document()
devtools::install()
devtools::document()
devtools::install()
devtools::document()
devtools::install()
devtools::document()
devtools::install()
library(devtools)
library(roxygen2)
devtools::document()
devtools::install()
library(devtools)
library(roxygen2)
devtools::install()
devtools::document()
devtools::install()
library(devtools)
library(roxygen2)
devtools::document()
devtools::install()
library(devtools)
library(roxygen2)
devtools::document()
devtools::install()
library(devtools)
library(roxygen2)
devtools::document()
devtools::install()
devtools::document()
devtools::install()
devtools::document()
devtools::install()
devtools::document()
devtools::install()
library(devtools)
library(roxygen2)
devtools::document()
devtools::install()
knitr::opts_chunk$set(echo = TRUE)
knitr::opts_knit$set(root.dir = "~/Documents/scripts/bioinformatics/int_sites/int_site_analysis/cell_types/")
require(scales)
library(ggrepel)
library(cowplot)
library(data.table)
library(ggsignif)
library(broom)
library(minpack.lm)
library(tidyverse)
library(rigrag)
figure.directory <- "figures"
if (!dir.exists(figure.directory)) { dir.create(figure.directory) }
files <- rigrag::generate_file_list(directory="wt_int_site_bed", pattern="*genic.bed")
sample.ids <- list("EC Primary CD4+", "HEK293T #1", "HEK293T #2", "HEK293T #3", "Jurkat #1",
"Jurkat #2", "Jurkat #3", "MDM", "HIV Neg Primary CD4+", "PBMC")
wt.samples <- rigrag::int_file_import(files=files, sample.ids=sample.ids, collapsed = TRUE)
#wt.samples <- wt.samples %>% dplyr::filter(sample != "PBMC" & sample != "HEK293T #3")
mb.frag.samples <- wt.samples %>% dplyr::filter(sample != "EC Primary CD4+" &
sample != "HIV Neg Primary CD4+" &
sample != "Jurkat #2" &
sample != "PBMC")
mb.frag.samples <- rigrag::pattern_frag_model(df=mb.frag.samples, pattern = "MB")
nasb.frag.samples <- wt.samples %>% dplyr::filter(sample == "Jurkat #2")
nasb.frag.samples <- rigrag::pattern_frag_model(df = nasb.frag.samples, pattern = "NASB")
random.frag.samples <- wt.samples %>% dplyr::filter(sample=="EC Primary CD4+" |
sample=="HIV Neg Primary CD4+" |
sample=="PBMC")
random.frag.samples <- rigrag::random_frag_model(df = random.frag.samples)
wt.samples <- rbind(mb.frag.samples, nasb.frag.samples, random.frag.samples)
wt.samples <- wt.samples %>%
dplyr::arrange(match(sample, c("HEK293T #1","HEK293T #2","HEK293T #3","Jurkat #1","Jurkat #2",
"Jurkat #3","PBMC","EC Primary CD4+","HIV Neg Primary CD4+","MDM")))
upper.outliers <- rigrag::cross_sample_occurrence(df=wt.samples, outlier.type="UPPER", output.type="summary" ) %>%
dplyr::arrange(match(sample, c("HEK293T #1","HEK293T #2","HEK293T #3","Jurkat #1","Jurkat #2",
"Jurkat #3","PBMC","EC Primary CD4+","HIV Neg Primary CD4+","MDM")))
library(devtools); library(roxygen2)
library(roxygen2)
devtools::install()
devtools::document()
devtools::install()
library(devtools)
library(roxygen2)
devtools::document()
devtools::install()
library(devtools)
library(roxygen2)
devtools::document()
devtools::install()
library(devtools)
library(roxygen2)
devtools::document()
devtools::install()
library(devtools)
library(roxygen2)
devtools::document()
devtools::install()
devtools::document()
devtools::install()
library(devtools)
library(roxygen2)
devtools::document()
devtools::install()
library(devtools)
library(roxygen2)
devtools::document()
devtools::install()
devtools::document90
devtools::document()
devtools::install()
devtools::document()
devtools::install()
devtools::document()
devtools::install()
devtools::document()
devtools::install()
devtools::document()
devtools::install()
devtools::document()
devtools::install()
devtools::document()
devtools::install()
exp(9.9777690)
exp(-0.9554541 - 9.9777690*0.3266587)
exp(-0.81176707 - 10.63873711*0.04848595)
exp(-0.81176707 - 10.63873711*0.04848595)*1000000^0.04848595)
exp(-0.81176707 - 10.63873711*0.04848595)*1000000^0.04848595
exp(-0.9554541 - 9.9777690*0.1287921)*1000000^0.1287921
exp(-0.80305456 - 10.62849307*0.04111835)*1000000^0.04111835
exp(-0.9554541 - 9.9777690*0.04)*1000000^0.04
exp(-0.9554541 - 9.9777690*0.06)*1000000^0.06
exp(-0.9554541 - 9.9777690*0.1)*1000000^0.1
devtools::document()
devtools::install()
devtools::document()
devtools::install()
devtools::document()
devtools::install()
ggsave(filename=paste0(getwd(), "/", figure.directory, "/", "rigs_cso_plot.tiff"), plot=upper.cso.plot, height=6,
width=10, units="in", device="tiff")
devtools::document()
devtools::install()
devtools::document()
devtools::install()
devtools::document()
devtools::document()
devtools::install()
devtools::document()
devtools::install()
devtools::document()
devtools::install()
devtools::document()
devtools::install()
devtools::document()
devtools::install()
library(devtools)
library(roxygen2)
devtools::document()
devtools::document()
